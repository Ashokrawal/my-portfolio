import { ShaderMaterial, ShaderMaterialParameters } from 'three';
import Abstract from './core/Abstract';
import Base from './core/Base';
import Depth from './core/Depth';
import Fresnel from './core/Fresnel';
import Noise from './core/Noise';
import Normals from './core/Normals';
import Texture from './core/Texture';
declare type LayerMaterialProps = {
    layers: Abstract[];
};
declare class LayerMaterial extends ShaderMaterial {
    layers: Abstract[];
    static constructShader(layers?: Abstract[]): {
        uniforms: {
            [key: string]: any;
        };
        vertexShader: string;
        fragmentShader: string;
    };
    constructor(props: ShaderMaterialParameters & LayerMaterialProps);
    update(): void;
}
export { LayerMaterial, Abstract, Base, Depth, Fresnel, Noise, Normals, Texture };
